<UserControl x:Class="HunterPie.GUIControls.Custom_Controls.WindowNotification"
             x:Name="WindowNotificationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HunterPie.GUIControls.Custom_Controls"
             mc:Ignorable="d" 
             d:DesignHeight="592" d:DesignWidth="1000" DataContext="{StaticResource Localization}">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#FF060606"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#00000000">
        <Grid x:Name="wnd" ClipToBounds="True" Margin="133,75,141,189" Background="#F90F0F0F" MaxWidth="800" MaxHeight="450" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.Effect>
                <DropShadowEffect Opacity="0.2"/>
            </Grid.Effect>

            <Grid Margin="0,0,-726,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="726*"/>
                    <ColumnDefinition Width="725*"/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding ElementName=WindowNotificationControl, Path=Icon}" Height="128" Margin="66,71,530,0" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding ElementName=WindowNotificationControl, Path=Text}" Padding="5,0,5,0" TextWrapping="WrapWithOverflow" Foreground="White" Margin="215,101,0,0" FontSize="18" Height="146" VerticalAlignment="Top"/>
                <Button x:Name="AcceptButton" Content="{Binding Mode=OneWay, XPath=/Strings/Client/Notifications/String[@ID\=\'STATIC_ACCEPT\']/@Name}" Height="36" VerticalAlignment="Bottom" Margin="0,0,377,0" FontWeight="Normal" Click="AcceptButton_Click"/>
                <Button x:Name="RejectButton" Content="{Binding Mode=OneWay, XPath=/Strings/Client/Notifications/String[@ID\=\'STATIC_REJECT\']/@Name}" Height="36" VerticalAlignment="Bottom" Margin="356,0,1,0" FontWeight="Normal" Click="RejectButton_Click" />
                <Image Source="{Binding ElementName=WindowNotificationControl, Path=Icon}" Height="128" Margin="306,23,289,0" VerticalAlignment="Top" Grid.Column="1"/>
                <TextBox x:Name="Box" ToolTip="{Binding Mode=OneWay, XPath=/Strings/Client/Settings/String[@ID\=\'STATIC_COPYCLIPBOARD\']/@Name}" Cursor="Arrow" Height="31" Margin="10,177,11,0" Text="{Binding ElementName=WindowNotificationControl, Path=Link}" VerticalAlignment="Top" Foreground="#FFF3F3F3" CaretBrush="WhiteSmoke" BorderBrush="{x:Null}" Background="#FF060606" FontSize="18" Grid.Column="1" SelectionBrush="#FFEA4949" IsReadOnly="True" PreviewMouseDown="TextBox_MouseButtonDown" TextOptions.TextHintingMode="Fixed"/>
                <local:MinimalButton Text="Open in default Browser" Foreground="WhiteSmoke" Margin="0,0,10,12" VerticalAlignment="Bottom" Link="{Binding ElementName=WindowNotificationControl, Path=Link}" Grid.ColumnSpan="1" Grid.Column="1" HorizontalAlignment="Right" Width="244" FontSize="14">
                    <local:MinimalButton.Color>
                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,1">
                            <GradientStop Color="#FFBF0F0F"/>
                            <GradientStop Color="#FFDA1919" Offset="1"/>
                        </LinearGradientBrush>
                    </local:MinimalButton.Color>
                </local:MinimalButton>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=WindowNotificationControl, Path=IsAccepted}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="-726,0,0,0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0,0,-726,0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <Button Content="X" FontWeight="Normal" Click="Button_Click" Margin="0,0,-1,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Right" Width="50"/>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <Trigger Property="IsVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="0.9" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="0.9" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</UserControl>
